title: schéma JSON de la documentation
abstract: |
  Ce schéma définit la doc des jeux de données exposés en s'inspirant des schema JSON
  et permettant de générer facilement un schéma JSON.
  
  Cette doc distingue les concepts de:
    - jeu de données (dataset) (réf. dcat:Dataset ), ex: 'Route 500 éd. 2020', 'Route 500, éd. 2019'
    - spécification d'un jeu de données (réf. dct:Standard), ex: 'Route 500 v3, 2020''
  
  Un service de Features correspond à un jeu de données.
  La liste des jeux de données du fichier doc.yaml correspond aux serveurs bien connus de fts.php/ftsonsql.php.
  Un jeu de données peut référencer une spécification.
  
  Une spécification décrit la structuration des données, notamment:
    - la définition des collections, de leurs propriétés, des valeurs en cas de type énuméré,
    - la définition du type de géométrie de chaque collection,
    - l'éventuelle définition des propriétés définissant l'extension temporelle.
  La documentation d'un jeu de données peut être partielle.
  
  Ajouter la possibilité d'indiquer qu'un attribut définit un géoréférencement indirect.
  Par exemple, le code Insee d'une commune ou une adresse, définit un tel géoréférencement

  journal:
    22/2/2022:
      - restrciction du fichier aux jeux de données
      - les spécifications sont transférées dans ../specs
      - ajout d'une propriété 'abstract' à dataset
    21/3/2021:
      - ajout de la possibilité de définir une extension temporelle, utilisée pour comhisto
    3/2/2021:
      - modif lien dataset -> specification pour un pointeur JSON pour permettre d'éclater le fichier doc.yaml en plusieurs
$id: http://feature.geoapi.fr/schema/doc
$schema: http://json-schema.org/draft-06/schema#
definitions:
  link:
    description: définition d'un lien Web (RFC 8288)
    type: object
    required: [href]
    properties:
      href:
        type: string
        example: http://data.example.com/buildings/123
      rel:
        type: string
        example: alternate
      type:
        type: string
        example: application/geo+json
      hreflang:
        type: string
        example: en
      title:
        type: string
        example: Trierer Strasse 70, 53115 Bonn
      length:
        type: integer
  enumType:
    description: |
      description d'un type énuméré soit par une liste de valeurs autorisées soit par un dictionnaire des valeurs
      permettant de détailler chaque valeur.
    oneOf:
      - description: description par la liste des valeurs autorisées
        type: array
        items:
          type: string
      - description: description par un dictionnaire indexé sur chaque valeur autorisée
        type: object
        patternProperties:
          ^[-a-zA-Z0-9_]*$:
            description: description de la valeur
            type: object
            additionalProperties: false
            required: [label]
            properties:
              label:
                description: étiquette associée destinée à un humain
                type: string
              description:
                description: description plus détaillée de la valeur, comprend définition, critère de sélection, ...
  property:
    description: |
      description d'une propriété d'une collection.
      Contrairement aux schema JSON, si enum est utilisé le type n'est pas nécessaire.
    type: object
    additionalProperties: false
    required: [title]
    properties:
      title:
        description: titre de la propriété destiné à un humain
        type: string
      description:
        description: description plus détaillée de la propriété
        type: string
      comment:
        description: commentaire éditorial non diffusé avec le jeu de données
        type: string
      mandatory:
        description: Une valeur est-elle obligatoire pour cette propriété ? Par défaut yes
        type: string
        enum: [yes, no]
      identifier:
        description: Propriété identifiant l'objet (clé primaire)
        type: string
        enum: [yes, no]
      type:
        description: type de la propriété
        type: string
        enum:
          - string
          - integer
          - number
          - date
      enum:
        $ref: '#/definitions/enumType'
      unit:
        description: si la propriété décrit une mesure alors indique l'unité de cette mesure
        enum:
          - tonne
          - meter
      specificValues:
        description: |
          si certaines valeurs ont une signification particulière alors liste de ces valeurs et de leur signification
          sous la forme d'un dictionnaire indiquant pour chaque valeur sa signification.
        oneOf:
          - type: object
            patternProperties:
              ^[-a-zA-Z0-9_\.]*$:
                description: signification de la valeur
                type: string
          - description: cas particulier où les valeurs sont les premiers entiers positifs ou nuls
            type: array
            items:
              description: signification de la valeur
              type: string
  geometryType:
    description: |
      liste des types géométriques élémentaires construite à partir du type GeoJSON de géométrie en y ajoutant
      éventuellement 2D/3D ainsi que le type none indiquant qu'un objet n'a pas de géométrie.
    type: string
    enum:
      - Point
      - Point2D
      - Point3D
      - MultiPoint
      - MultiPoint2D
      - MultiPoint3D
      - LineString
      - LineString2D
      - LineString3D
      - MultiLineString
      - MultiLineString2D
      - MultiLineString3D
      - Polygon
      - Polygon2D
      - Polygon3D
      - MultiPolygon
      - MultiPolygon2D
      - MultiPolygon3D
      - GeometryCollection
      - none
  collection:
    description: |
      description d'une collection d'un jeu de données.
      Le concept de collection est défini par le standard OGC API Features.
    type: object
    additionalProperties: false
    required: [title, geometryType]
    properties:
      title:
        description: titre de la collection destiné à un humain
        type: string
      description:
        description: |
          description plus détaillée, comprend la définition, les critères de sélection, ...
          Possibilité d'utiliser du markdown.
        type: string
      geometryType:
        description: |
          Type(s) de géométrie des objets de la classe.
          Construit à partir du type GeoJSON en y ajoutant éventuellement 2D/3D ainsi que le type none
          indiquant que les objets n'ont pas de géométrie.
          Peut être soit un type ou une liste de types possibles.
        oneOf:
          - $ref: '#/definitions/geometryType'
          - type: array
            items:
              $ref: '#/definitions/geometryType'
        enum:
          - Point
          - Point2D
          - Point3D
          - MultiPoint
          - MultiPoint2D
          - MultiPoint3D
          - LineString
          - LineString2D
          - LineString3D
          - MultiLineString
          - MultiLineString2D
          - MultiLineString3D
          - Polygon
          - Polygon2D
          - Polygon3D
          - MultiPolygon
          - MultiPolygon2D
          - MultiPolygon3D
          - GeometryCollection
          - none
      temporalExtent:
        description: Définition des propriétés définissant l'extension temporelle de la collection
        oneOf:
          - description: définition par une propriété de début et une de de fin
            type: object
            additionalProperties: false
            properties:
              startProperty:
                description: id de la propriété définissant le début de l'extension temporelle d'un n-uplet
                type: string
              endProperty:
                description: id de la propriété définissant la fin de l'extension temporelle d'un n-uplet
                type: string
          - description: définition par une propriété de date
            type: object
            additionalProperties: false
            properties:
              dateProperty:
                description: id de la propriété définissant la date associée à un n-uplet
                type: string
      properties:
        description: |
          Dictionnaire des propriétés des items de la collection indexé sur le nom de la propriété.
          La description est optionelle.
        type: object
        additionalProperties: false
        patternProperties:
          ^[-a-zA-Z0-9_]*$:
            $ref: '#/definitions/property'
  specification:
    description: |
      Spécification d'un jeu de données.
      C'est un standard (http://purl.org/dc/terms/Standard) pour un jeu de données.
      La définition DublinCore du standard est: A reference point against which other things can be evaluated or compared.
    type: object
    additionalProperties: false
    required: [title]
    properties:
      title:
        description: titre de la spécification
        type: string
      issued:
        description: date de publication de la spécification
        type: string
      abstract:
        description: résumé du jeu de données
        type: string
      identifier:
        description: URI de référence de la spécification
        type: string
      source:
        description: Document source de la spécification, au cas où identifier n'est pas adapté
        type: string
      metadata:
        description: lien vers des MD génériques par ex. ISO 19139
        type: string
        format: uri
      precision:
        description: |
          nbre de chiffres signficatifs dans les coordonnées géographiques
          ex: 4 => résolution de de 1e-4 degrés soit 1e-4° * 40 km / 360° = 11 m
        type: integer
      collections:
        description: dictionnaire des collections indexées sur l'id de la collection
        type: object
        patternProperties:
          ^[-a-zA-Z0-9_]*$:
            $ref: '#/definitions/collection'
  dataset:
    description: |
      Description d'un jeu de données.
      Le concept de jeu de données est identique à http://www.w3.org/ns/dcat#Dataset
      dont la définition est:
        A collection of data, published or curated by a single agent, and available for access or download in one or more
        representations.
    type: object
    additionalProperties: false
    required: [title, path]
    properties:
      title:
        description: titre du jeu de données
        type: string
      abstract:
        description: résumé du document
        type: string
      identifier:
        description: URI de référence du jeu de données
        type: string
      licence:
        description: définition de la licence d'utilisation des données
        $ref: '#/definitions/link'
      path:
        description: chemin du jeu de données pour https://features.geoapi.fr/
        type: string
      metadata:
        description: lien vers des MD par ex. ISO 19139
        type: string
        format: uri
      conformsTo:
        description: URI d'une spécification 
        type: string
        format: uri
type: object
additionalProperties: false
required: [title, $schema]
properties:
  title:
    description: titre du document
    type: string
  abstract:
    description: résumé du document
    type: string
  $schema:
    description: schéma JSON du document défini soit par une référence, soit inline
    oneOf:
      - type: string
      - $ref: http://json-schema.org/schema#
  datasets:
    description: dictionnaire des jeux de données documentés indexés par leur id
    type: object
    additionalProperties: false
    patternProperties:
      ^[-a-zA-Z0-9_@\.]*$:
        $ref: '#/definitions/dataset'
  eof:
    description: marque de fin de fichier
    type: 'null'
